{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { productListReducer, productDetailsReducer } from './reducers/productReducers';\nimport { cartReducer } from './reducers/cartReducers';\nimport { userLoginReducer, userRegisterReducer, userDetailsReducer, userUpdateProfileReducer, userListReducer, userDeleteReducer, userUpdateReducer } from './reducers/userReducers';\nimport { orderCreateReducer, orderDetailsReducer, orderPayReducer, orderListMyReducer } from './reducers/orderReducers';\nconst reducer = combineReducers({\n  productList: productListReducer,\n  productDetails: productDetailsReducer,\n  cart: cartReducer,\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  userDetails: userDetailsReducer,\n  userUpdateProfile: userUpdateProfileReducer,\n  userList: userListReducer,\n  userDelete: userDeleteReducer,\n  userUpdate: userUpdateReducer,\n  orderCreate: orderCreateReducer,\n  orderDetails: orderDetailsReducer,\n  orderPay: orderPayReducer,\n  orderListMy: orderListMyReducer\n});\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : [];\nconst userInfoFromStorage = localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null;\nconst shippingAddressFromStorage = localStorage.getItem('shippindAddress') ? JSON.parse(localStorage.getItem('shippingAddress')) : {};\nconst initialState = {\n  cart: {\n    cartItems: cartItemsFromStorage,\n    shippingAddress: shippingAddressFromStorage\n  },\n  userLogin: {\n    userInfo: userInfoFromStorage\n  }\n};\nconst middleware = [thunk];\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"sources":["C:/Users/pc/Desktop/Reader's World bs/frontend/src/store.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","productListReducer","productDetailsReducer","cartReducer","userLoginReducer","userRegisterReducer","userDetailsReducer","userUpdateProfileReducer","userListReducer","userDeleteReducer","userUpdateReducer","orderCreateReducer","orderDetailsReducer","orderPayReducer","orderListMyReducer","reducer","productList","productDetails","cart","userLogin","userRegister","userDetails","userUpdateProfile","userList","userDelete","userUpdate","orderCreate","orderDetails","orderPay","orderListMy","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","shippingAddressFromStorage","initialState","cartItems","shippingAddress","userInfo","middleware","store"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,kBAAT,EAA6BC,qBAA7B,QAAyD,4BAAzD;AACA,SAASC,WAAT,QAA4B,yBAA5B;AACA,SAAQC,gBAAR,EACQC,mBADR,EAEQC,kBAFR,EAGQC,wBAHR,EAIQC,eAJR,EAKQC,iBALR,EAMQC,iBANR,QAMiC,yBANjC;AAOQ,SACEC,kBADF,EAEEC,mBAFF,EAGEC,eAHF,EAIEC,kBAJF,QAKO,0BALP;AAOR,MAAMC,OAAO,GAAGlB,eAAe,CAAC;AAC9BmB,EAAAA,WAAW,EAAEf,kBADiB;AAE9BgB,EAAAA,cAAc,EAAEf,qBAFc;AAG9BgB,EAAAA,IAAI,EAAEf,WAHwB;AAI9BgB,EAAAA,SAAS,EAAEf,gBAJmB;AAK9BgB,EAAAA,YAAY,EAAEf,mBALgB;AAM9BgB,EAAAA,WAAW,EAAEf,kBANiB;AAO9BgB,EAAAA,iBAAiB,EAAEf,wBAPW;AAQ9BgB,EAAAA,QAAQ,EAAEf,eARoB;AAS9BgB,EAAAA,UAAU,EAAEf,iBATkB;AAU9BgB,EAAAA,UAAU,EAAEf,iBAVkB;AAW9BgB,EAAAA,WAAW,EAAEf,kBAXiB;AAY9BgB,EAAAA,YAAY,EAAEf,mBAZgB;AAa9BgB,EAAAA,QAAQ,EAAEf,eAboB;AAc9BgB,EAAAA,WAAW,EAAEf;AAdiB,CAAD,CAA/B;AAkBA,MAAMgB,oBAAoB,GAAGC,YAAY,CAACC,OAAb,CAAqB,WAArB,IACzBC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX,CADyB,GAEzB,EAFJ;AAIE,MAAMG,mBAAmB,GAAGJ,YAAY,CAACC,OAAb,CAAqB,UAArB,IAC1BC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CAD0B,GAE1B,IAFF;AAIA,MAAMI,0BAA0B,GAAGL,YAAY,CAACC,OAAb,CAAqB,iBAArB,IACjCC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,iBAArB,CAAX,CADiC,GAEjC,EAFF;AAIA,MAAMK,YAAY,GAAG;AACnBnB,EAAAA,IAAI,EAAE;AAAEoB,IAAAA,SAAS,EAAER,oBAAb;AAAmCS,IAAAA,eAAe,EAAEH;AAApD,GADa;AAEnBjB,EAAAA,SAAS,EAAE;AAAEqB,IAAAA,QAAQ,EAAEL;AAAZ;AAFQ,CAArB;AAKF,MAAMM,UAAU,GAAG,CAAC1C,KAAD,CAAnB;AAEA,MAAM2C,KAAK,GAAG9C,WAAW,CACvBmB,OADuB,EAEvBsB,YAFuB,EAGvBrC,mBAAmB,CAACF,eAAe,CAAC,GAAG2C,UAAJ,CAAhB,CAHI,CAAzB;AAMA,eAAeC,KAAf","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport { productListReducer, productDetailsReducer} from './reducers/productReducers'\r\nimport { cartReducer } from './reducers/cartReducers'\r\nimport {userLoginReducer, \r\n        userRegisterReducer, \r\n        userDetailsReducer, \r\n        userUpdateProfileReducer,\r\n        userListReducer,\r\n        userDeleteReducer,\r\n        userUpdateReducer,} from './reducers/userReducers'\r\n        import {\r\n          orderCreateReducer,\r\n          orderDetailsReducer,\r\n          orderPayReducer,\r\n          orderListMyReducer,\r\n        } from './reducers/orderReducers'\r\n\r\nconst reducer = combineReducers({\r\n  productList: productListReducer,\r\n  productDetails: productDetailsReducer,\r\n  cart: cartReducer,\r\n  userLogin: userLoginReducer,\r\n  userRegister: userRegisterReducer,\r\n  userDetails: userDetailsReducer,\r\n  userUpdateProfile: userUpdateProfileReducer,\r\n  userList: userListReducer,\r\n  userDelete: userDeleteReducer,\r\n  userUpdate: userUpdateReducer,\r\n  orderCreate: orderCreateReducer,\r\n  orderDetails: orderDetailsReducer,\r\n  orderPay: orderPayReducer,\r\n  orderListMy: orderListMyReducer,\r\n})\r\n\r\n\r\nconst cartItemsFromStorage = localStorage.getItem('cartItems')\r\n  ? JSON.parse(localStorage.getItem('cartItems'))\r\n  : []\r\n\r\n  const userInfoFromStorage = localStorage.getItem('userInfo')\r\n  ? JSON.parse(localStorage.getItem('userInfo'))\r\n  : null\r\n\r\n  const shippingAddressFromStorage = localStorage.getItem('shippindAddress')\r\n  ? JSON.parse(localStorage.getItem('shippingAddress'))\r\n  : {}\r\n\r\n  const initialState = {\r\n    cart: { cartItems: cartItemsFromStorage, shippingAddress: shippingAddressFromStorage },\r\n    userLogin: { userInfo: userInfoFromStorage },\r\n  }\r\n\r\nconst middleware = [thunk]\r\n\r\nconst store = createStore(\r\n  reducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n)\r\n\r\nexport default store"]},"metadata":{},"sourceType":"module"}